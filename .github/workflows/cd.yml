name: CD - Build and Push to ECR

on:
  push:
    branches:
      - main

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: ghost-who-you-gonna-call

permissions:
  id-token: write # Required for OIDC
  contents: read # Required to checkout the code

jobs:
  env-setup:
    name: Set shared ENV
    runs-on: ubuntu-latest
    outputs:
      aws-ecr-sha: ${{ steps.get-deploy-env.outputs.AWS_ECR_SHA }}
    steps:
      - name: Get Deployment Environment
        id: get-deploy-env
        run: |
          echo "AWS_ECR_SHA=$(echo '${{ github.sha }}' | cut -c1-7 )" >> $GITHUB_OUTPUT

  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: env-setup
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure Production AWS credentials using OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_SA }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_SA }}
          role-to-assume: ${{ vars.AWS_ROLE_TO_ASSUME_BUILD_DEPLOY_PRODUCTION }}
          aws-region: us-east-1

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          mask-password: 'true'

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}
          tags: |
            type=sha,prefix=,format=short
            type=raw,value=production-latest,enable=${{ github.ref == 'refs/heads/main' }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: linux/amd64

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64
          provenance: false

      - name: Configure Development/Staging AWS credentials using OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_SA }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_SA }}
          role-to-assume: ${{ vars.AWS_ROLE_TO_ASSUME_BUILD_DEPLOY_DEVELOPMENT }}
          aws-region: us-east-1

      - name: Update Lambda Function with latest image
        run: |
          aws lambda update-function-code --function-name staging-ghost-who-you-gonna-call --image-uri 287788126803.dkr.ecr.us-east-1.amazonaws.com/ghost-who-you-gonna-call:${{ needs.env-setup.outputs.aws-ecr-sha }} --publish
